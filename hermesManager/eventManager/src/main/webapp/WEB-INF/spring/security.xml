<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	
	<bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    	<constructor-arg  name="strength" value="12"/>
    </bean>
	
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="usuarioWebService">
		 	  <security:password-encoder ref="bCryptPasswordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager> 

	<security:http
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless"
			entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<!-- Acceso anÃ³nimo autenticarse - registrar usuario consulta - activar cuenta -->
		<security:intercept-url method="POST" pattern="/api/user/registerUser" access="permitAll" />				
		<security:intercept-url pattern="/api/user/activarCuenta" access="permitAll" />
		
		<!-- userManager -->
		<security:intercept-url method="GET" pattern="/api/user/getUser" access="hasAnyRole('ADMIN', 'CONSULTA')" />
		<security:intercept-url method="POST" pattern="/api/user/registerAdmin" access="hasRole('ADMIN')" />	
		<security:intercept-url method="PUT" pattern="/api/user/editUser/**" access="hasRole('ADMIN')" />	
		<security:intercept-url method="DELETE" pattern="/api/user/deleteUser/**" access="hasRole('ADMIN')" />	
		<security:intercept-url method="GET" pattern="/api/user/json/**" access="hasRole('ADMIN')" />
		
		<!-- dashboard -->
		<security:intercept-url method="GET" pattern="/api/dashboard/**" access="hasAnyRole('ADMIN', 'CONSULTA')" />
		
		<!-- eventManager -->
		<security:intercept-url method="POST" pattern="/api/eventManager/json/stateEventManager" access="hasAnyRole('ADMIN', 'CONSULTA')" />
		<security:intercept-url method="GET" pattern="/api/eventManager/**" access="hasRole('ADMIN')" />
		<security:intercept-url method="POST" pattern="/api/eventManager/**" access="hasRole('ADMIN')" />		
				
		<!-- vechicleLocation -->
		<security:intercept-url method="GET" pattern="/api/vehiclelocation/**" access="hasAnyRole('ADMIN', 'CONSULTA')" />
		
		<!-- measurement -->
		<security:intercept-url method="GET" pattern="/api/measurement/**" access="hasAnyRole('ADMIN', 'CONSULTA')" />	
		
		<!-- dataSection -->
		<security:intercept-url method="GET" pattern="/api/dataSection/**" access="hasAnyRole('ADMIN', 'CONSULTA')" />	
			
		<security:csrf disabled="true"/>
	</security:http>
	

	<bean id="unauthorizedEntryPoint" class="es.udc.lbd.hermes.eventManager.util.UnauthorizedEntryPoint" />
	 <bean class="es.udc.lbd.hermes.eventManager.util.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
		<constructor-arg ref="usuarioWebService" />
	</bean>
</beans>

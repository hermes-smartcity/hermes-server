
# Prueba guardar errores en la BD

# Define the root logger with appender file
log4j.rootLogger=DB, stdout, logfile

log4j.logger.es.udc.lbd.hermes=${log4j.level}
log4j.logger.org=WARN
log4j.logger.com=WARN
log4j.logger.org.springframework.scheduling=INFO

# Console output...
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Threshold=WARN
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{dd/MM/yy HH:mm:ss}] [%p - %c{1}] %m%n


# File output
log4j.appender.logfile=org.apache.log4j.RollingFileAppender
log4j.appender.logfile.Threshold=WARN
log4j.appender.logfile.File=${log4j.appender.logfile.File}
log4j.appender.logfile.MaxFileSize=5MB
log4j.appender.logfile.MaxBackupIndex=10
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=[%d{dd/MM/yy HH:mm:ss}] [%p - %c{1}] %m%n

# Database 

# Define the DB appender
log4j.appender.DB=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.DB.URL=${datasource.jdbcUrl}
log4j.appender.DB.driver=${jdbcDriver.className}
log4j.appender.DB.user=${datasource.user}
log4j.appender.DB.password=${datasource.password}
log4j.appender.DB.sql=INSERT INTO logs (message, logger, level, dated) values ('%m', '%C', '%p', to_timestamp('%d', 'YYYY-MM-DD HH24:MI:SS,MS'))
log4j.appender.DB.layout=org.apache.log4j.PatternLayout
log4j.appender.DB.layout.ConversionPattern=[%d{dd/MM/yy HH:mm:ss}] [%p - %c{1}] %m%n